#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        to_layer4 {
            bindings = <&tog 4>;
            key-positions = <18 41>;
        };

        arrow_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <7 41>;
        };

        arrow_down {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <19 41>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        input_1Password: input_1Password {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp M &kp A &kp AT &kp D &kp A &kp N &kp N1 &kp N2 &kp N3 &kp RET>;
            label = "INPUT_1PASSWORD";
        };

        input_versatile_Psddword: input_versatile_Psddword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp M &kp A &kp D &kp A &kp N &kp N1 &kp N2 &kp N3>;
            label = "INPUT_VERSATILE_PSDDWORD";
        };

        input_pc_pssword: input_pc_pssword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp M &kp A &kp D &kp A &kp N &kp N8 &kp N3 &kp N1 &kp N0 &kp RET>;
            label = "INPUT_PC_PSSWORD";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E           &kp R                    &kp T                                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D           &kp F                    &kp G             &lt 6 SINGLE_QUOTE          &kp LEFT_BRACKET   &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C           &kp V                    &kp B             &lt 1 SEMICOLON             &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_SHIFT  &mt LEFT_WIN LANG_HANJA  &lt 2 LANGUAGE_1  &lt_to_layer_0 4 SPACE      &kp BACKSPACE      &lt 3 ENTER                             &kp EQUAL
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp LS(LC(LG(LEFT_ARROW)))  &kp LS(LC(LG(UP_ARROW)))  &kp LS(LC(LG(RIGHT_ARROW)))  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp LG(LS(NUMBER_4))        &kp LG(LS(N5))            &kp F8                       &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                      &trans                    &trans                       &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                                                                                     &kp F12
            >;
        };

        NUM {
            bindings = <
&kp ASTERISK  &kp PLUS    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                                              &kp AMPERSAND    &kp ASTERISK  &kp TILDE  &kp INT_YEN  &kp TILDE
&kp SLASH     &kp MINUS   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0      &kp LEFT_PARENTHESIS   &kp DOLLAR       &kp PERCENT   &kp CARET  &kp DOLLAR   &kp MINUS
&kp COMMA     &kp PERIOD  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL            &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp SLASH    &kp BACKSLASH
&trans        &trans      &trans           &trans           &trans           &trans               &kp DELETE             &trans                                                 &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &kp LG(W)      &kp LG(UP_ARROW)  &kp LG(R)      &kp LG(T)                      &none   &none           &kp UP_ARROW    &none            &trans
&kp TAB     &kp LG(A)      &kp LG(S)         &kp LG(F)      &trans     &trans      &none   &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LG(Z)   &kp LG(X)      &kp LG(C)         &kp LG(V)      &trans     &trans      &trans  &trans  &trans          &trans          &trans           &trans
&trans      &kp LA(SPACE)  &kp LEFT_SHIFT    &kp LG(SPACE)  &trans     &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans             &trans           &trans  &trans  &trans                                 &trans              &kp LG(LA(LEFT_ARROW))  &kp LG(W)  &kp LG(LA(RIGHT_ARROW))  &trans
&trans             &trans           &trans  &trans  &trans  &trans      &input_pc_pssword  &kp LC(LEFT_ARROW)  &mkp LCLK               &mkp MCLK  &mkp RCLK                &kp LC(RIGHT_ARROW)
&trans             &trans           &trans  &trans  &trans  &trans      &input_1Password   &kp LA(LC(LG(M)))   &mkp MB4                &kp LG(R)  &mkp MB5                 &kp LA(LC(LG(L)))
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans  &trans      &trans             &trans                                                                          &input_versatile_Psddword
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans     &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans     &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&kp LS(Z)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans     &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
